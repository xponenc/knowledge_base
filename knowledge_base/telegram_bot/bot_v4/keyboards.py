from aiogram.types import KeyboardButton, ReplyKeyboardMarkup, InlineKeyboardButton, InlineKeyboardMarkup
from aiogram.utils.keyboard import InlineKeyboardBuilder


async def reply_start_keyboard(items: list, buttons_per_row: int = 2):
    kb = ([[InlineKeyboardButton(text=f"{item.get('name')}",
                                 callback_data=f"{item.get('callback_data')}") for item in line]
           for line in (items[i: i + buttons_per_row]
                        for i in range(0, len(items), buttons_per_row))])
    return InlineKeyboardMarkup(
        inline_keyboard=kb,
    )


async def reply_inline_keyboard(items: list, buttons_per_row: int = 1):
    kb = ([[KeyboardButton(text=item) for item in line]
           for line in (items[i: i + buttons_per_row]
                        for i in range(0, len(items), buttons_per_row))])
    return ReplyKeyboardMarkup(
        keyboard=kb,
        resize_keyboard=True,
        one_time_keyboard=True,
        input_field_placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ"
    )


async def get_inline_keyboard(buttons_data: list, btn_per_row: int = 2):
    """
    buttons
    :param btn_per_row: –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–Ω–æ–ø–æ–∫ –≤ —Å—Ç—Ä–æ–∫–µ
    :param buttons_data: = [("üìù –ò–∑–º–µ–Ω–∏—Ç—å –∏–º—è", "change_name"),
               ("üéöÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å —Å–∫–æ—Ä–æ—Å—Ç—å –∑–≤—É–∫–∞", "change_speed"),
               ("üå°Ô∏è –ò–∑–º–µ–Ω–∏—Ç—å —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—É", "change_temperature"),
               ("üéß –ê—É–¥–∏–æ –æ—Ç–≤–µ—Ç—ã –≤ —á–∞—Ç–∞—Ö", "change_audio_responses")]
    :return:
    """
    builder = InlineKeyboardBuilder()

    for text, callback_data in buttons_data:
        builder.button(text=text, callback_data=callback_data)
    builder.adjust(btn_per_row)
    return builder.as_markup()


# async def get_task_confirm_inline_keyboard():
#     """inline –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è/–æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è –Ω–æ–º–µ—Ä–∞ –∑–∞–¥–∞—á–∏"""
#     builder = InlineKeyboardBuilder()
#     buttons_data = [(f"{YES_EMOJI} –î–ê", "task_number_confirmed"),
#                     (f"{NO_EMOJI} –ù–ï–¢", "task_number_unconfirmed"),
#                     ]
#     for text, callback_data in buttons_data:
#         builder.button(text=text, callback_data=callback_data)
#     builder.adjust(2)
#     return builder.as_markup()

async def get_task_confirm_inline_keyboard():
    """–°–æ–∑–¥–∞—ë—Ç inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è/–æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è –Ω–æ–º–µ—Ä–∞ –∑–∞–¥–∞—á–∏"""

    kb = [
        [InlineKeyboardButton(text="‚úÖ –î–ê", callback_data="task_number_confirmed"),
         InlineKeyboardButton(text="‚ùå –ù–ï–¢", callback_data="task_number_unconfirmed")]
    ]

    return InlineKeyboardMarkup(inline_keyboard=kb)
